
---------------------------------------------------------------------------------------------------------
INTRODUCTION:
---------------------------------------------------------------------------------------------------------

    Distributed environment have different components and services, it may cause compatibility issue between services and os.
    Have different environments and may not work in other environment.
    Image is packaged and container is instance of image.

---------------------------------------------------------------------------------------------------------
DOCKER IMAGE: 
---------------------------------------------------------------------------------------------------------

Dockerfile      -   Write the instruction with arguments to create image. 

Instructions: 

    FROM        -   Base Image 
    RUN         -   To run linux commands 
    COPY        -   Copy from host to container.
        COPY [--chown=<user>:<group>] <src>... <dest>
    ADD         -   Copy from host to container. Untar file and download from URL. 
        ADD [--chown=<user>:<group>] <src>... <dest>
    CMD         -   Override from CLI. 
    ENTRYPOINT  -   By default append but override using entrypoint in CLI. 
    MAINTENER   -   Developer (deprecated)
    LABEL       -   Additional information
        LABEL   key1=value1 \
                key2=value2
    WORKDIR     -   Current working directory.
    ENV         -   Environment variable which pass as -e in CLI.
    EXPOSE      -   Container port exposed. 
        EXPOSE 80 or EXPOSE 80/tcp 
    ARG         -   Argument passed which used in image build only. --build-args in CLI.
    VOLUME      -   Map to host volume for permanent data. 
        volume ["/data"]    -   used to mount volume. 
    USER        -   Run as non root user. 
    ONBUILD     -   Parent gives instruction to child. 
    STOPSIGNAL  -


ARG - used for building docker image. It is not available for running container. 
ENV - used for future running container. cant change ENV directly during build. 

--build-arg key=value 

---------------------------------------------------------------------------------------------------------

CMD VS ENTRYPOINT: 

    Used to execute first.

    bash command - listens for input from terminal. If no input, exit the container.

    In nginx or mysql, use the cmn which runs as process. 

    ENTRYPOINT - Append 
    CMD - Override from CLI.

    --entrypoint=new-value in CLI.

---------------------------------------------------------------------------------------------------------

DockerFile Best Practices: 

    1. Run multiple commands in single layer using &&. 
            RUN yum update && yum install package.

    2. Use multiple stage.

            FROM ubuntu AS build.

            FROM ubuntu 
            COPY --from=build 

---------------------------------------------------------------------------------------------------------
